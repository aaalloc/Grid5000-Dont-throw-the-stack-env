#==============================================================================
#
# DESCRIPTION: Recipe extending a Grid'5000 environment recipe supported by
# the technical team. The build will be similar to the one of the supported
# environments, involving puppet notably.
#
#==============================================================================
# This recipe extends another. To look at the step involed, run:
#   kameleon build -d ubuntu2204-dont-throw-the-stack.yaml
# To see the variables that you can override, use the following command:
#   kameleon info ubuntu2204-dont-throw-the-stack.yaml
---
extend: grid5000/ubuntu2004-x64-common.yaml

global:
        ### Uncomment and adapt the global variables below as needed

        ## Export format to generate
        # appliance_formats: qcow2 tar.zst

        ## Environment description customization
        ## Author
        # g5k_author: "john.doe@grid5000.fr"
        ## Version
        # g5k_version: 1
        ## Environment image path and compression
        # g5k_tar_path: local:///path/to/your/image
        # g5k_tar_compression: "zstd"
        ## Environment postinstall path, compression, and script command
        # g5k_postinst_path: server:///grid5000/postinstalls/g5k-postinstall.tgz
        # g5k_postinst_compression: "gzip"
        # g5k_postinst_script: g5k-postinstall --net debian
        ## Environment kernel path and params
        # g5k_kernel_path: "/vmlinuz"
        # g5k_initrd_path: "/initrd.img"
        g5k_kernel_params: "modprobe.blacklist=nouveau,mitigations=off"
        ## Environment visibility
        # g5k_visibility: "shared"

        ## Other parameters can be changed, see kameleon info ubuntu2204-dont-throw-the-stack.yaml

bootstrap:
        ### The bootstrap section takes in charge the initial installation of the
        ## system (distribution installation). No modification should be needed here.
        - "@base"

setup:
        ### The setup section is where customizations of the system take place.
        ## We can request steps from the extended recipe to be executed
        - "@base"
        ## We add steps required by our customization after or before @base. Use
        ## kameleon dryrun ubuntu2204-dont-throw-the-stack.yaml to see the resulting steps in the build.
        ## The following is given as example only, replace with your steps.
        - init:
                  - create_home:
                            - exec_in: >
                                      mkdir /home/work
                  - get_scripts:
                            - download_file_in:
                                      - http://public.sophia.grid5000.fr/~ayanovsk/dont-throw-the-stack/update-linux-tools.sh
                                      - /home/work/update-linux-tools.sh

                  - get_kernel_polling_patch:
                            - download_file_in:
                                      - https://git.uwaterloo.ca/p5cai/netstack-exp/-/raw/master/kernel-polling-5.15.79-base.patch?ref_type=heads
                                      - /home/work/kernel-polling-5.15.79-base.patch

                  - get_mlx4_driver_patch:
                            - download_file_in:
                                      - https://git.uwaterloo.ca/p5cai/netstack-exp/-/raw/master/kernel-polling-5.15.79-mlx4.patch?ref_type=heads
                                      - /home/work/mlx4-driver.patch

                  - get_netstack_conf:
                            - download_file_in:
                                      - http://public.nancy.grid5000.fr/~ayanovsk/dont-throw-the-stack/netstack-config.patch
                                      - /home/work/netstack-config.patch

                  - get_before_work:
                            - download_file_in:
                                      - http://public.nancy.grid5000.fr/~ayanovsk/dont-throw-the-stack/before-work.sh
                                      - /home/work/before-work.sh
        - general_dep:
                  - install_dep:
                            - exec_in: >
                                      apt-get update
                            - exec_in: >
                                      DEBIAN_FRONTEND=noninteractive apt-get install -y systemd-timesyncd ethtool pkg-config git pdsh net-tools kexec-tools libpci-dev pciutils gettext libelf-dev flex fakeroot bc ncurses-dev xz-utils build-essential wget libssl-dev python3-pip autotools-dev automake bison
                            # dpdk/mlx
                            - exec_in: >
                                      DEBIAN_FRONTEND=noninteractive  apt-get install -y ibverbs-providers libibverbs-dev
                            #     - exec_in: >
                            #               DEBIAN_FRONTEND=noninteractive apt install -y linux-image-5.15.0-79-generic
        - ssh-accept-new:
                  - ssh_accept_new:
                            - exec_in: |
                                      echo "StrictHostKeyChecking=accept-new" >> /etc/ssh/ssh_config

        - install_fstack:
                  - install_dep:
                            - exec_in: |
                                      apt-get install -y libnuma-dev libpcap-dev meson
                                      pip3 install pyelftools --upgrade
                  - compile_and_install:
                            - exec_in: |
                                      git clone https://github.com/F-Stack/f-stack.git /home/work/f-stack
                                      cd /home/work/f-stack/dpdk
                                      meson -Denable_kmods=true -Ddisable_libs=flow_classify -Ddisable_drivers=crypto/openssl,net/ice build
                                      ninja -C build -j $(nproc)
                                      sudo ninja -C build install
                                      cd ../lib
                                      make -j $(nproc)
                                      sudo make install

        - install_memcached_fstack:
                  - compile:
                            - exec_in: |
                                      apt install -y scons libevent-dev gengetopt libzmq3-dev
                                      git clone https://git.uwaterloo.ca/p5cai/memcached-fstack.git /home/work/memcached-fstack
                                      wget -O /tmp/memcached-hash.patch https://github.com/memcached/memcached/commit/63b8e76067523a02a3e0215db1aef0b34edcf708.patch
                                      cd /home/work/memcached-fstack
                                      git apply /tmp/memcached-hash.patch
                                      ./autogen.sh
                                      ./configure
                                      make -j $(nproc)
                    #       - breakpoint: "check memcached"

        - install_memcached:
                  - compile:
                            - exec_in: |
                                      git clone https://github.com/memcached/memcached.git -b 1.6.9 /home/work/memcached
                                      cd /home/work/memcached
                                      ./autogen.sh
                                      ./configure
                                      make -j $(nproc)

        - caladan:
                  - compile:
                            - exec_in: |
                                      apt install -y make gcc cmake pkg-config libnl-3-dev libnl-route-3-dev libnuma-dev uuid-dev libssl-dev libaio-dev libcunit1-dev libclang-dev libncurses-dev meson python3-pyelftools
                                      git clone https://github.com/shenango/caladan.git /home/work/caladan
                                      cd /home/work/caladan
                                      # because after that they introduce uintr and we dont want in our case
                                      git checkout ed67045
                                      make submodules
                                      make clean
                                      CONFIG_MLX5=y make
                                      pushd ksched
                                      make clean
                                      make
                    #       - breakpoint: "check memcached"
        - memcached-caladan:
                  - compile:
                            - exec_in: |
                                      git clone https://github.com/shenango/memcached.git -b caladan /home/work/memcached-caladan
                                      cd /home/work/memcached-caladan
                                      ./autogen.sh
                                      ./configure --with-shenango=/home/work/caladan
                                      make -j $(nproc)

        - get_experiences:
                  - get_repo:
                            - exec_in: |
                                      git clone https://git.uwaterloo.ca/p5cai/netstack-exp.git /home/work/netstack-exp
                                      cd /home/work/netstack-exp 
                                      git apply /home/work/netstack-config.patch
        - install_linux_tools:
                  - get_linux_repo:
                            - exec_in: |
                                      wget https://cdn.kernel.org/pub/linux/kernel/v5.x/linux-5.15.79.tar.xz -O /home/work/linux-5.15.79.tar.xz
                                      tar -xf /home/work/linux-5.15.79.tar.xz -C /home/work

export:
        ### The export section takes in charge the export of your customized Grid'5000
        ## environment. No modification should be needed here.
        - "@base"
